/*
 * ER/Studio Data Architect SQL Code Generation
 * Project :      LOWA_LIQUOR_SALES.DM1
 *
 * Date Created : Sunday, August 11, 2024 22:26:23
 * Target DBMS : Microsoft Azure SQL DB
 */

/* 
 * TABLE: DIM_CATEGORY 
 */

CREATE TABLE EDW.DIM_CATEGORY(
    DIM_CATEGORY_SK           INT             NOT NULL,
    SOURCE_CATEGORY_NUMBER    INT             NOT NULL,
    CATEGORY_NAME             VARCHAR(255)    NULL,
    DW_LOAD_WORKFLOW_NAME     VARCHAR(50)     NOT NULL,
    DW_LOAD_JOB_ID            VARCHAR(50)     NOT NULL,
    DW_LOAD_DATE              DATE            NOT NULL,
    DIM_SOURCE_SK             INT             NOT NULL,
    CONSTRAINT PK_DIM_CATEGORY PRIMARY KEY NONCLUSTERED (DIM_CATEGORY_SK)
);

IF OBJECT_ID('EDW.DIM_CATEGORY') IS NOT NULL
    PRINT '<<< CREATED TABLE EDW.DIM_CATEGORY >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE EDW.DIM_CATEGORY >>>';

/* 
 * TABLE: DIM_CITY 
 */

CREATE TABLE EDW.DIM_CITY(
    DIM_CITY_SK              INT            NOT NULL,
    CITY_NAME                VARCHAR(10)    NOT NULL,
    DW_LOAD_WORKFLOW_NAME    VARCHAR(50)    NOT NULL,
    DW_LOAD_JOB_ID           VARCHAR(50)    NOT NULL,
    DW_LOAD_DATE             DATE           NOT NULL,
    DIM_SOURCE_SK            INT            NOT NULL,
    CONSTRAINT PK_DIM_CITY PRIMARY KEY NONCLUSTERED (DIM_CITY_SK)
);

IF OBJECT_ID('EDW.DIM_CITY') IS NOT NULL
    PRINT '<<< CREATED TABLE EDW.DIM_CITY >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE EDW.DIM_CITY >>>';

/* 
 * TABLE: DIM_COUNTY 
 */

CREATE TABLE EDW.DIM_COUNTY(
    DIM_COUNTRY_SK           INT             NOT NULL,
    SOURCE_COUNTY_NUMBER     INT             NULL,
    COUNTY_NAME              VARCHAR(100)    NULL,
    DW_LOAD_WORKFLOW_NAME    VARCHAR(50)     NOT NULL,
    DW_LOAD_JOB_ID           VARCHAR(50)     NOT NULL,
    DW_LOAD_DATE             DATE            NOT NULL,
    DIM_SOURCE_SK            INT             NOT NULL,
    CONSTRAINT PK_DIM_COUNTY PRIMARY KEY NONCLUSTERED (DIM_COUNTRY_SK)
);

IF OBJECT_ID('EDW.DIM_COUNTY') IS NOT NULL
    PRINT '<<< CREATED TABLE EDW.DIM_COUNTY >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE EDW.DIM_COUNTY >>>';

/* 
 * TABLE: DIM_DATE 
 */

CREATE TABLE EDW.DIM_DATE(
    dim_date_key             INT              NOT NULL,
    date                     DATE             NOT NULL,
    day_of_week              NUMERIC(1, 0)    NOT NULL,
    day_name                 VARCHAR(20)      NOT NULL,
    day_of_year              NUMERIC(3, 0)    NOT NULL,
    week_of_year             NUMERIC(2, 0)    NOT NULL,
    month                    NUMERIC(2, 0)    NOT NULL,
    month_name               VARCHAR(12)      NOT NULL,
    quarter                  NUMERIC(1, 0)    NOT NULL,
    quarter_name             VARCHAR(2)       NOT NULL,
    season                   NUMERIC(1, 0)    NOT NULL,
    season_name              VARCHAR(10)      NOT NULL,
    year                     NUMERIC(4, 0)    NOT NULL,
    is_weekend               BIT              NOT NULL,
    dw_load_job_id           VARCHAR(10)      NOT NULL,
    dw_load_workflow_name    VARCHAR(50)      NOT NULL,
    dw_load_date             DATETIME         NOT NULL,
    DIM_SOURCE_SK            INT              NOT NULL,
    CONSTRAINT PK_DIM_DATE PRIMARY KEY NONCLUSTERED (dim_date_key)
);

IF OBJECT_ID('EDW.DIM_DATE') IS NOT NULL
    PRINT '<<< CREATED TABLE EDW.DIM_DATE >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE EDW.DIM_DATE >>>';

/* 
 * TABLE: DIM_ITEM 
 */

CREATE TABLE EDW.DIM_ITEM(
    DIM_ITEM_SK                       INT               NOT NULL,
    SOURCE_ITEM_NUMBER                VARCHAR(18)       NOT NULL,
    ITEM_DESCRIPTION                  VARCHAR(255)      NULL,
    BOTTLE_VOLUME_IN_ML               NUMERIC(10, 2)    NULL,
    STATE_BOTTLE_COST_IN_DOLLARS      NUMERIC(10, 2)    NULL,
    STATE_BOTTLE_RETAIL_IN_DOLLARS    NUMERIC(10, 2)    NULL,
    DW_LOAD_WORKFLOW_NAME             VARCHAR(50)       NOT NULL,
    DW_LOAD_JOB_ID                    VARCHAR(50)       NOT NULL,
    DW_LOAD_DATE                      DATE              NOT NULL,
    DIM_SOURCE_SK                     INT               NOT NULL,
    CONSTRAINT PK_DIM_ITEM PRIMARY KEY NONCLUSTERED (DIM_ITEM_SK)
);

IF OBJECT_ID('EDW.DIM_ITEM') IS NOT NULL
    PRINT '<<< CREATED TABLE EDW.DIM_ITEM >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE EDW.DIM_ITEM >>>';

/* 
 * TABLE: DIM_LOCATION 
 */

CREATE TABLE EDW.DIM_LOCATION(
    DIM_LOCATION_SK          INT               NOT NULL,
    ADDRESS                  VARCHAR(255)      NULL,
    CITY                     VARCHAR(100)      NULL,
    COUNTY                   VARCHAR(10)       NULL,
    ZIP_CODE                 VARCHAR(10)       NULL,
    LATITUDE                 NUMERIC(12, 8)    NULL,
    LONGITUDE                NUMERIC(12, 8)    NULL,
    LOCATION                 VARCHAR(30)       NULL,
    DW_LOAD_WORKFLOW_NAME    VARCHAR(50)       NOT NULL,
    DW_LOAD_JOB_ID           VARCHAR(50)       NOT NULL,
    DW_LOAD_DATE             DATE              NOT NULL,
    DIM_SOURCE_SK            INT               NOT NULL,
    CONSTRAINT PK_DIM_LOCATION PRIMARY KEY NONCLUSTERED (DIM_LOCATION_SK)
);

IF OBJECT_ID('EDW.DIM_LOCATION') IS NOT NULL
    PRINT '<<< CREATED TABLE EDW.DIM_LOCATION >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE EDW.DIM_LOCATION >>>';

/* 
 * TABLE: EDW.DIM_SOURCE 
 */

CREATE TABLE EDW.DIM_SOURCE(
    DIM_SOURCE_SK        INT             NOT NULL,
    DIM_                 VARCHAR(255)    NOT NULL,
    DW_LOAD_DATE         DATE            NOT NULL,
    DW_LOAD_USER_NAME    VARCHAR(50)     NOT NULL,
    CONSTRAINT PK_DIM_SOURCE PRIMARY KEY NONCLUSTERED (DIM_SOURCE_SK)
);

IF OBJECT_ID('EDW.DIM_SOURCE') IS NOT NULL
    PRINT '<<< CREATED TABLE EDW.DIM_SOURCE >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE EDW.DIM_SOURCE >>>';

/* 
 * TABLE: EDW.DIM_STORE 
 */

CREATE TABLE EDW.DIM_STORE(
    DIM_STORE_SK             INT             NOT NULL,
    SOURCE_STORE_NUMBER      INT             NOT NULL,
    STORE_NAME               VARCHAR(255)    NULL,
    DW_LOAD_WORKFLOW_NAME    VARCHAR(50)     NOT NULL,
    DW_LOAD_JOB_ID           VARCHAR(50)     NOT NULL,
    DW_LOAD_DATE             DATE            NOT NULL,
    DIM_SOURCE_SK            INT             NOT NULL,
    CONSTRAINT PK_DIM_STORE PRIMARY KEY NONCLUSTERED (DIM_STORE_SK)
);

IF OBJECT_ID('EDW.DIM_STORE') IS NOT NULL
    PRINT '<<< CREATED TABLE EDW.DIM_STORE >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE EDW.DIM_STORE >>>';

/* 
 * TABLE: EDW.DIM_VENDOR 
 */

CREATE TABLE EDW.DIM_VENDOR(
    DIM_VENDOR_SK            INT             NOT NULL,
    SOURCE_VENDOR_NAME_NK    INT             NOT NULL,
    VENDOR_NAME              VARCHAR(100)    NULL,
    DW_LOAD_WORKFLOW_NAME    VARCHAR(50)     NOT NULL,
    DW_LOAD_JOB_ID           VARCHAR(50)     NOT NULL,
    DW_LOAD_DATE             DATE            NOT NULL,
    DIM_SOURCE_SK            INT             NOT NULL,
    CONSTRAINT PK_DIM_VENDOR PRIMARY KEY NONCLUSTERED (DIM_VENDOR_SK)
);

IF OBJECT_ID('EDW.DIM_VENDOR') IS NOT NULL
    PRINT '<<< CREATED TABLE EDW.DIM_VENDOR >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE EDW.DIM_VENDOR >>>';

/* 
 * TABLE: EDW.FACT_CITY_YEARLY 
 */

CREATE TABLE EDW.FACT_CITY_YEARLY(
    FACT_CITY_YEARLY_SK      INT            NOT NULL,
    DIM_CITY_SK              INT            NOT NULL,
    TOTAL_POPULATION         INT            NULL,
    DW_LOAD_WORKFLOW_NAME    VARCHAR(50)    NOT NULL,
    DW_LOAD_JOB_ID           VARCHAR(50)    NOT NULL,
    DW_LOAD_DATE             DATE           NOT NULL,
    DIM_SOURCE_SK            INT            NOT NULL,
    CONSTRAINT PK_FACT_CITY_YEARLY PRIMARY KEY NONCLUSTERED (FACT_CITY_YEARLY_SK)
);

IF OBJECT_ID('EDW.FACT_CITY_YEARLY') IS NOT NULL
    PRINT '<<< CREATED TABLE EDW.FACT_CITY_YEARLY >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE EDW.FACT_CITY_YEARLY >>>';

/* 
 * TABLE: EDW.FACT_COUNTY_YEARLY 
 */

CREATE TABLE EDW.FACT_COUNTY_YEARLY(
    FACT_COUNTY_YEARLY_SK           CHAR(10)          NOT NULL,
    DIM_COUNTRY_SK                  INT               NOT NULL,
    TOTAL_POPULATION                NUMERIC(20, 0)    NULL,
    TOTAL_SALES_IN_DOLLARS          NUMERIC(20, 0)    NULL,
    TOTAL_VOLUME_SOLD_IN_GALLONS    NUMERIC(10, 2)    NULL,
    SALES_PER_CAPITA                NUMERIC(10, 2)    NULL,
    DW_LOAD_WORKFLOW_NAME           VARCHAR(50)       NOT NULL,
    DW_LOAD_JOB_ID                  VARCHAR(50)       NOT NULL,
    DW_LOAD_DATE                    DATE              NOT NULL,
    DIM_SOURCE_SK                   INT               NOT NULL,
    CONSTRAINT PK_FACT_COUNTY_YEARLY PRIMARY KEY NONCLUSTERED (FACT_COUNTY_YEARLY_SK)
);

IF OBJECT_ID('EDW.FACT_COUNTY_YEARLY') IS NOT NULL
    PRINT '<<< CREATED TABLE EDW.FACT_COUNTY_YEARLY >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE EDW.FACT_COUNTY_YEARLY >>>';

/* 
 * TABLE: EDW.FACT_LIQOUR_SALES 
 */

CREATE TABLE EDW.FACT_LIQUOR_SALES(
    FACT_LIQUOR_SALES_SK       INT               NOT NULL,
    SOURCE_INVOICE_NUMBER_NK   VARCHAR(25)       NOT NULL,
    DIM_ITEM_SK                INT               NOT NULL,
    DIM_CATEGORY_SK            INT               NOT NULL,
    DIM_VENDOR_SK              INT               NOT NULL,
    DIM_STORE_SK               INT               NOT NULL,
    DIM_LOCATION_SK            INT               NOT NULL,
    DIM_CITY_SK                INT               NOT NULL,
    DIM_COUNTRY_SK             INT               NOT NULL,
    INVOICE_DATE               INT               NOT NULL,
    BOTTLE_SOLD                INT               NULL,
    SALE_DOLLARS               NUMERIC(15, 2)    NULL,
    VOLUME_SOLD_IN_LITRES      NUMERIC(5, 2)     NULL,
    VOLUME_SOLD_IN_GALLONS     NUMERIC(5, 2)     NULL,
    DW_LOAD_WORKFLOW_NAME      VARCHAR(50)       NOT NULL,
    DW_LOAD_JOB_ID             VARCHAR(50)       NOT NULL,
    DW_LOAD_DATE               DATE              NOT NULL,
    DIM_SOURCE_SK              INT               NOT NULL,
    CONSTRAINT PK_FACT_LIQUOR_SALES PRIMARY KEY NONCLUSTERED (FACT_LIQUOR_SALES_SK)
);

IF OBJECT_ID('EDW.FACT_LIQUOR_SALES') IS NOT NULL
    PRINT '<<< CREATED TABLE EDW.FACT_LIQUOR_SALES >>>'
ELSE
    PRINT '<<< FAILED CREATING TABLE EDW.FACT_LIQUOR_SALES >>>';

/* 
 * FOREIGN KEY CONSTRAINTS
 */
ALTER TABLE EDW.DIM_CATEGORY ADD CONSTRAINT FK_DIM_CATEGORY_DIM_SOURCE 
    FOREIGN KEY (DIM_SOURCE_SK)
    REFERENCES EDW.DIM_SOURCE(DIM_SOURCE_SK);

ALTER TABLE EDW.DIM_CITY ADD CONSTRAINT FK_DIM_CITY_DIM_SOURCE 
    FOREIGN KEY (DIM_SOURCE_SK)
    REFERENCES EDW.DIM_SOURCE(DIM_SOURCE_SK);

ALTER TABLE EDW.DIM_COUNTY ADD CONSTRAINT FK_DIM_COUNTY_DIM_SOURCE 
    FOREIGN KEY (DIM_SOURCE_SK)
    REFERENCES EDW.DIM_SOURCE(DIM_SOURCE_SK);

ALTER TABLE EDW.DIM_DATE ADD CONSTRAINT FK_DIM_DATE_DIM_SOURCE 
    FOREIGN KEY (DIM_SOURCE_SK)
    REFERENCES EDW.DIM_SOURCE(DIM_SOURCE_SK);

ALTER TABLE EDW.DIM_ITEM ADD CONSTRAINT FK_DIM_ITEM_DIM_SOURCE 
    FOREIGN KEY (DIM_SOURCE_SK)
    REFERENCES EDW.DIM_SOURCE(DIM_SOURCE_SK);

ALTER TABLE EDW.DIM_LOCATION ADD CONSTRAINT FK_DIM_LOCATION_DIM_SOURCE 
    FOREIGN KEY (DIM_SOURCE_SK)
    REFERENCES EDW.DIM_SOURCE(DIM_SOURCE_SK);

ALTER TABLE EDW.DIM_STORE ADD CONSTRAINT FK_DIM_STORE_DIM_SOURCE 
    FOREIGN KEY (DIM_SOURCE_SK)
    REFERENCES EDW.DIM_SOURCE(DIM_SOURCE_SK);

ALTER TABLE EDW.DIM_VENDOR ADD CONSTRAINT FK_DIM_VENDOR_DIM_SOURCE 
    FOREIGN KEY (DIM_SOURCE_SK)
    REFERENCES EDW.DIM_SOURCE(DIM_SOURCE_SK);

ALTER TABLE EDW.FACT_CITY_YEARLY ADD CONSTRAINT FK_FACT_CITY_YEARLY_DIM_CITY 
    FOREIGN KEY (DIM_CITY_SK)
    REFERENCES EDW.DIM_CITY(DIM_CITY_SK);

ALTER TABLE EDW.FACT_CITY_YEARLY ADD CONSTRAINT FK_FACT_CITY_YEARLY_DIM_SOURCE 
    FOREIGN KEY (DIM_SOURCE_SK)
    REFERENCES EDW.DIM_SOURCE(DIM_SOURCE_SK);

ALTER TABLE EDW.FACT_COUNTY_YEARLY ADD CONSTRAINT FK_FACT_COUNTY_YEARLY_DIM_COUNTY 
    FOREIGN KEY (DIM_COUNTRY_SK)
    REFERENCES EDW.DIM_COUNTY(DIM_COUNTRY_SK);

ALTER TABLE EDW.FACT_COUNTY_YEARLY ADD CONSTRAINT FK_FACT_COUNTY_YEARLY_DIM_SOURCE 
    FOREIGN KEY (DIM_SOURCE_SK)
    REFERENCES EDW.DIM_SOURCE(DIM_SOURCE_SK);

ALTER TABLE EDW.FACT_LIQUOR_SALES ADD CONSTRAINT FK_FACT_LIQUOR_SALES_DIM_CATEGORY 
    FOREIGN KEY (DIM_CATEGORY_SK)
    REFERENCES EDW.DIM_CATEGORY(DIM_CATEGORY_SK);

ALTER TABLE EDW.FACT_LIQUOR_SALES ADD CONSTRAINT FK_FACT_LIQUOR_SALES_DIM_STORE 
    FOREIGN KEY (DIM_STORE_SK)
    REFERENCES EDW.DIM_STORE(DIM_STORE_SK);

ALTER TABLE EDW.FACT_LIQUOR_SALES ADD CONSTRAINT FK_FACT_LIQUOR_SALES_DIM_VENDOR 
    FOREIGN KEY (DIM_VENDOR_SK)
    REFERENCES EDW.DIM_VENDOR(DIM_VENDOR_SK);

ALTER TABLE EDW.FACT_LIQUOR_SALES ADD CONSTRAINT FK_FACT_LIQUOR_SALES_DIM_LOCATION 
    FOREIGN KEY (DIM_LOCATION_SK)
    REFERENCES EDW.DIM_LOCATION(DIM_LOCATION_SK);

ALTER TABLE EDW.FACT_LIQUOR_SALES ADD CONSTRAINT FK_FACT_LIQUOR_SALES_DIM_ITEM 
    FOREIGN KEY (DIM_ITEM_SK)
    REFERENCES EDW.DIM_ITEM(DIM_ITEM_SK);

ALTER TABLE EDW.FACT_LIQUOR_SALES ADD CONSTRAINT FK_FACT_LIQUOR_SALES_DIM_DATE 
    FOREIGN KEY (INVOICE_DATE)
    REFERENCES EDW.DIM_DATE(dim_date_key);

ALTER TABLE EDW.FACT_LIQUOR_SALES ADD CONSTRAINT FK_FACT_LIQUOR_SALES_DIM_COUNTY 
    FOREIGN KEY (DIM_COUNTRY_SK)
    REFERENCES EDW.DIM_COUNTY(DIM_COUNTRY_SK);

ALTER TABLE EDW.FACT_LIQUOR_SALES ADD CONSTRAINT FK_FACT_LIQUOR_SALES_DIM_CITY 
    FOREIGN KEY (DIM_CITY_SK)
    REFERENCES EDW.DIM_CITY(DIM_CITY_SK);

ALTER TABLE EDW.FACT_LIQUOR_SALES ADD CONSTRAINT FK_FACT_LIQUOR_SALES_DIM_SOURCE 
    FOREIGN KEY (DIM_SOURCE_SK)
    REFERENCES EDW.DIM_SOURCE(DIM_SOURCE_SK);
